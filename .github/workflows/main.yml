name: Build and Package

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Version name (default is ref name)'

env:
  # ${{ env.VERSION }} is used by release scripts
  VERSION: ${{ github.event.inputs.name || github.ref_name }}

jobs:
  build-windows-x86_64:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.2.4'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          modules: qtmultimedia
          cache: true
          aqtversion: "==3.2.*"

      - name: Configure CMake
        run: |
          mkdir build
          cmake -S . -B ./build -DCMAKE_BUILD_TYPE=Release
        shell: cmd

      - name: Build
        run: |
          cd build
          cmake --build . --config=Release
        shell: cmd

      - name: Deploy Dependencies
        run: |
          cd build/Release
          ls
          windeployqt QMediaPlayer.exe
        shell: pwsh

      - name: Package
        run: |
          cp autorun.reg build/Release/
          cp autorun_registry.bat build/Release/
          cd build/Release
          powershell Compress-Archive -Path * -DestinationPath ../../QMediaPlayer-Windows-${{ env.VERSION }}-x86_64.zip
        shell: pwsh

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: QMediaPlayer-Windows-x86_64
          path: QMediaPlayer-Windows-${{ env.VERSION }}-x86_64.zip


  build-ubuntu-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Check architecture
        run: |
            arch=$(uname -m)
            if [[ "$arch" != x86_64 ]]
            then
                echo "Unexpected architecture: $arch" >&2
                exit 1
            fi
    
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Install Dependencies
        run: |
          sudo apt install -y cmake qt6-base-dev qt6-wayland-dev qt6-multimedia-dev clang
        shell: pwsh
        
      - name: Configure CMake
        run: |
          mkdir build
          cmake -S . -B ./build -DCMAKE_BUILD_TYPE=Release
        shell: pwsh

      - name: Build
        run: |
          cd build
          cmake --build . --config=Release
        shell: pwsh
          
      - name: Package
        run: |
          mkdir release
          cd build
          Compress-Archive -Path QMediaPlayer -DestinationPath ../release/QMediaPlayer-Ubuntu-${{ env.VERSION }}-x86_64.zip
        shell: pwsh
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: QMediaPlayer-Ubuntu-x86_64
          path: release/QMediaPlayer-Ubuntu-${{ env.VERSION }}-x86_64.zip


  build-ubuntu-aarch64:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Check architecture
        run: |
            arch=$(uname -m)
            if [[ "$arch" != aarch64 ]]
            then
                echo "Unexpected architecture: $arch" >&2
                exit 1
            fi
    
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Install Dependencies
        run: |
          sudo apt install -y cmake qt6-base-dev qt6-wayland-dev qt6-multimedia-dev clang --fix-missing || true
        shell: pwsh
        
      - name: Configure CMake
        run: |
          mkdir build
          cmake -S . -B ./build -DCMAKE_BUILD_TYPE=Release
        shell: pwsh

      - name: Build
        run: |
          cd build
          cmake --build . --config=Release
        shell: pwsh
          
      - name: Package
        run: |
          mkdir release
          cd build
          Compress-Archive -Path QMediaPlayer -DestinationPath ../release/QMediaPlayer-Ubuntu-${{ env.VERSION }}-aarch64.zip
        shell: pwsh
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: QMediaPlayer-Ubuntu-aarch64
          path: release/QMediaPlayer-Ubuntu-${{ env.VERSION }}-aarch64.zip


  release:
    needs:
      - build-windows-x86_64
      - build-ubuntu-x86_64
      - build-ubuntu-aarch64
    runs-on: Ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Directory Init
        run: |
          mkdir release
          mkdir release/releases
      
      - name: Download Windows x86_64
        uses: actions/download-artifact@v4
        with:
          name: QMediaPlayer-Windows-x86_64
          path: release/releases/
          
      - name: Download Ubuntu x86_64
        uses: actions/download-artifact@v4
        with:
          name: QMediaPlayer-Ubuntu-x86_64
          path: release/releases/
          
      - name: Download Ubuntu aarch64
        uses: actions/download-artifact@v4
        with:
          name: QMediaPlayer-Ubuntu-aarch64
          path: release/releases/
          
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: QMediaPlayer-all-release-${{ env.VERSION }}
          path: release/releases
